generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(cuid()) @map("_id") @db.ObjectId
  createdAt   DateTime      @default(now())
  email       String        @unique
  name        String?
  avatar      String?
  role        Role          @default(USER)
  posts       Post[]
  badge       Badge[]
  Comment     Comment[]
  WikiArticle WikiArticle[]
  WikiComment WikiComment[]
}

model Badge {
  id           String @id @default(cuid()) @map("_id") @db.ObjectId
  name         String
  description  String
  criteria     String
  badgePicture String
  userId       String @db.ObjectId
  User         User?  @relation(fields: [userId], references: [id])
}

model Post {
  id        String    @id @default(cuid()) @map("_id") @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String
  published Boolean   @default(false)
  authorId  String    @db.ObjectId
  author    User      @relation(fields: [authorId], references: [id])
  Comment   Comment[]
}

model Comment {
  id        String   @id @default(cuid()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  body      String
  postId    String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  authorId  String   @db.ObjectId
  author    User     @relation(fields: [authorId], references: [id])
}

model WikiArticle {
  id          String        @id @default(cuid()) @map("_id") @db.ObjectId
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  title       String
  content     String
  authorId    String        @db.ObjectId
  author      User          @relation(fields: [authorId], references: [id])
  WikiComment WikiComment[]
}

model WikiComment {
  id        String      @id @default(cuid()) @map("_id") @db.ObjectId
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  body      String
  articleId String      @db.ObjectId
  article   WikiArticle @relation(fields: [articleId], references: [id])
  authorId  String      @db.ObjectId
  author    User        @relation(fields: [authorId], references: [id])
}

enum Role {
  USER
  ADMIN
  Moderator
}
